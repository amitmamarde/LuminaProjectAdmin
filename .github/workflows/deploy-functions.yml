# File path in your repo: .github/workflows/deploy-functions.yml

name: Deploy Firebase Function

# This workflow triggers on a push to the 'main' branch,
# but ONLY if there are changes inside the 'functions' directory.
on:
  push:
    branches:
      - main
    paths:
      - 'functions/**'

jobs:
  deploy_functions:
    name: Deploy to Firebase Functions
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment with npm cache enabled
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ./functions/package-lock.json

      # Step 3: Upgrade npm to the latest version (helps avoid integrity issues)
      - name: Upgrade npm
        run: npm install -g npm@latest

      # Step 4: Clean npm cache to prevent integrity errors from corrupted tarballs
      - name: Clean npm cache
        run: npm cache clean --force

      # Step 5: Install function dependencies fresh from registry
      - name: Install Function Dependencies
        run: npm ci --prefer-online --no-audit --no-fund
        working-directory: ./functions

      # Step 6: Authenticate to Google Cloud using the service account key from GitHub Secrets
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Step 7: Install the Firebase CLI globally in the runner
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Step 8: Deploy the function to Firebase, using the project ID from secrets
      - name: Deploy to Firebase
        run: |
          firebase deploy --only functions --project ${{ secrets.GCP_PROJECT_ID }} --non-interactive
