rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    function isAdmin() {
      return request.auth != null && getUserData(request.auth.uid).role == 'Admin';
    }
    function isExpert() {
      return request.auth != null && getUserData(request.auth.uid).role == 'Expert';
    }

    // --- Collection Rules ---
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create, delete: if isAdmin();
    }

    match /articles/{articleId} {
      allow read: if request.auth != null || resource.data.status == 'Published';
      allow create, delete: if isAdmin();

      // Update rules define who can change an article and when.
      allow update: if
        // 1. Admins can update any article at any stage.
        isAdmin() ||

        // 2. Experts can update an article under specific conditions.
        (isExpert() && (
            // --- CONDITION A: Claiming an article. THIS IS THE FINAL FIX. ---
            (
              // Pre-conditions: The article must be ready for review and currently unclaimed.
              resource.data.status == 'AwaitingExpertReview' &&
              resource.data.expertId == null &&

              // Validation: We verify the exact fields that are being changed.
              request.resource.data.expertId == request.auth.uid &&
              request.resource.data.expertDisplayName == getUserData(request.auth.uid).displayName &&

              // Protection: We explicitly ensure that no other critical fields are being modified during this action.
              request.resource.data.title == resource.data.title &&
              request.resource.data.status == resource.data.status && // The status must NOT change during a claim.
              request.resource.data.flashContent == resource.data.flashContent &&
              request.resource.data.deepDiveContent == resource.data.deepDiveContent
            ) ||

            // --- CONDITION B: Submitting a completed expert review. ---
            (
              // Pre-conditions: The user must be the assigned expert and the article must be in a state awaiting their review.
              resource.data.expertId == request.auth.uid &&
              (resource.data.status == 'AwaitingExpertReview' || resource.data.status == 'NeedsRevision') &&

              // Validation: The expert is allowed to change the status and the article's content.
              request.resource.data.status == 'AwaitingAdminReview' &&

              // Protection: We explicitly ensure that the expert cannot change other critical fields, like the title or who the expert is.
              request.resource.data.title == resource.data.title &&
              request.resource.data.expertId == resource.data.expertId &&
              request.resource.data.expertDisplayName == resource.data.expertDisplayName
            )
        ));
    }
  }
}
